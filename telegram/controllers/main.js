const db = require('../../db');
const { Extra, Markup } = require('telegraf');
const getPriceString = require('../../util/getPriceString');

const keyboard = Markup
.keyboard([
  ['üîç –ü–æ–∏—Å–∫', 'üìã –ö–∞—Ç–µ–≥–æ—Ä–∏–∏'],
  ['üõí –ö–æ—Ä–∑–∏–Ω–∞']
])
.resize()
.extra();

class Main {
  async getStart(ctx, next) {
    let parts = ctx.message.text.split(' ');
    let param = null;
    if(parts.length > 1) {
      param = parts[1];
    }
  
    let product = null;
    try {
      product = await db.product.findOne({
        _id: param
      });
    }
    catch(err) {
      console.error(err);
    }
  
    if(!ctx.user.activated) {
      await ctx.reply('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω!', keyboard);
      ctx.user.activated = true;
      await ctx.user.save();
    }
  
    if(product) {
      return await ctx.reply(product.title + '\n' + getPriceString(product.cost, product.unit) + '\n' + 'https://telegra.ph/' + product.telegraphLink, Markup.inlineKeyboard([
        [Markup.callbackButton('–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É', '__addToBasket_' + product._id.toString()),
        Markup.callbackButton('–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä', '__link_' + product._id.toString())]
      ]).extra());
    }
    else {
      return await ctx.reply('–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —Ç–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
  }

  async getMenu(ctx, next) {
    return ctx.reply('–ú–µ–Ω—é', keyboard);
  }

  async notFound(ctx, next) {
    return ctx.reply('–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ', keyboard);
  }
}

module.exports = new Main();